// Code generated by Fern. DO NOT EDIT.

package api

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/EnvSync-Cloud/envsync-go-sdk/sdk/internal"
)

type GetAuditLogsRequest struct {
	Page    *string `json:"-" url:"page,omitempty"`
	PerPage *string `json:"-" url:"per_page,omitempty"`
}

type GetAuditLogsResponse = []*GetAuditLogsResponseItem

type GetAuditLogsResponseItem struct {
	Id        string `json:"id" url:"id"`
	Action    string `json:"action" url:"action"`
	OrgId     string `json:"org_id" url:"org_id"`
	UserId    string `json:"user_id" url:"user_id"`
	Details   string `json:"details" url:"details"`
	Message   string `json:"message" url:"message"`
	CreatedAt string `json:"created_at" url:"created_at"`
	UpdatedAt string `json:"updated_at" url:"updated_at"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GetAuditLogsResponseItem) GetId() string {
	if g == nil {
		return ""
	}
	return g.Id
}

func (g *GetAuditLogsResponseItem) GetAction() string {
	if g == nil {
		return ""
	}
	return g.Action
}

func (g *GetAuditLogsResponseItem) GetOrgId() string {
	if g == nil {
		return ""
	}
	return g.OrgId
}

func (g *GetAuditLogsResponseItem) GetUserId() string {
	if g == nil {
		return ""
	}
	return g.UserId
}

func (g *GetAuditLogsResponseItem) GetDetails() string {
	if g == nil {
		return ""
	}
	return g.Details
}

func (g *GetAuditLogsResponseItem) GetMessage() string {
	if g == nil {
		return ""
	}
	return g.Message
}

func (g *GetAuditLogsResponseItem) GetCreatedAt() string {
	if g == nil {
		return ""
	}
	return g.CreatedAt
}

func (g *GetAuditLogsResponseItem) GetUpdatedAt() string {
	if g == nil {
		return ""
	}
	return g.UpdatedAt
}

func (g *GetAuditLogsResponseItem) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GetAuditLogsResponseItem) UnmarshalJSON(data []byte) error {
	type unmarshaler GetAuditLogsResponseItem
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetAuditLogsResponseItem(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetAuditLogsResponseItem) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

// Response schema for getting audit logs
type GetAuditLogsResponseWrapper struct {
	AuditLogs  GetAuditLogsResponse `json:"auditLogs" url:"auditLogs"`
	TotalPages float64              `json:"totalPages" url:"totalPages"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GetAuditLogsResponseWrapper) GetAuditLogs() GetAuditLogsResponse {
	if g == nil {
		return nil
	}
	return g.AuditLogs
}

func (g *GetAuditLogsResponseWrapper) GetTotalPages() float64 {
	if g == nil {
		return 0
	}
	return g.TotalPages
}

func (g *GetAuditLogsResponseWrapper) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GetAuditLogsResponseWrapper) UnmarshalJSON(data []byte) error {
	type unmarshaler GetAuditLogsResponseWrapper
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetAuditLogsResponseWrapper(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetAuditLogsResponseWrapper) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}
