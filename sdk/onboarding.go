// Code generated by Fern. DO NOT EDIT.

package api

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/EnvSync-Cloud/envsync-go-sdk/sdk/internal"
)

type AcceptOrgInviteRequest struct {
	OrgData  *AcceptOrgInviteRequestOrgData  `json:"org_data,omitempty" url:"-"`
	UserData *AcceptOrgInviteRequestUserData `json:"user_data,omitempty" url:"-"`
}

type AcceptUserInviteRequest struct {
	FullName string `json:"full_name" url:"-"`
	Password string `json:"password" url:"-"`
}

type CreateOrgInviteRequest struct {
	Email string `json:"email" url:"-"`
}

type CreateUserInviteRequest struct {
	Email  string `json:"email" url:"-"`
	RoleId string `json:"role_id" url:"-"`
}

type AcceptOrgInviteResponse struct {
	Message string `json:"message" url:"message"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (a *AcceptOrgInviteResponse) GetMessage() string {
	if a == nil {
		return ""
	}
	return a.Message
}

func (a *AcceptOrgInviteResponse) GetExtraProperties() map[string]interface{} {
	return a.extraProperties
}

func (a *AcceptOrgInviteResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler AcceptOrgInviteResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*a = AcceptOrgInviteResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *a)
	if err != nil {
		return err
	}
	a.extraProperties = extraProperties
	a.rawJSON = json.RawMessage(data)
	return nil
}

func (a *AcceptOrgInviteResponse) String() string {
	if len(a.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(a.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(a); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", a)
}

type AcceptUserInviteResponse struct {
	Message string `json:"message" url:"message"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (a *AcceptUserInviteResponse) GetMessage() string {
	if a == nil {
		return ""
	}
	return a.Message
}

func (a *AcceptUserInviteResponse) GetExtraProperties() map[string]interface{} {
	return a.extraProperties
}

func (a *AcceptUserInviteResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler AcceptUserInviteResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*a = AcceptUserInviteResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *a)
	if err != nil {
		return err
	}
	a.extraProperties = extraProperties
	a.rawJSON = json.RawMessage(data)
	return nil
}

func (a *AcceptUserInviteResponse) String() string {
	if len(a.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(a.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(a); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", a)
}

type CreateOrgInviteResponse struct {
	Message string `json:"message" url:"message"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (c *CreateOrgInviteResponse) GetMessage() string {
	if c == nil {
		return ""
	}
	return c.Message
}

func (c *CreateOrgInviteResponse) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *CreateOrgInviteResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler CreateOrgInviteResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CreateOrgInviteResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties
	c.rawJSON = json.RawMessage(data)
	return nil
}

func (c *CreateOrgInviteResponse) String() string {
	if len(c.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(c.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type CreateUserInviteResponse struct {
	Message string `json:"message" url:"message"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (c *CreateUserInviteResponse) GetMessage() string {
	if c == nil {
		return ""
	}
	return c.Message
}

func (c *CreateUserInviteResponse) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *CreateUserInviteResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler CreateUserInviteResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CreateUserInviteResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties
	c.rawJSON = json.RawMessage(data)
	return nil
}

func (c *CreateUserInviteResponse) String() string {
	if len(c.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(c.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type DeleteUserInviteResponse struct {
	Message string `json:"message" url:"message"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (d *DeleteUserInviteResponse) GetMessage() string {
	if d == nil {
		return ""
	}
	return d.Message
}

func (d *DeleteUserInviteResponse) GetExtraProperties() map[string]interface{} {
	return d.extraProperties
}

func (d *DeleteUserInviteResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler DeleteUserInviteResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*d = DeleteUserInviteResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *d)
	if err != nil {
		return err
	}
	d.extraProperties = extraProperties
	d.rawJSON = json.RawMessage(data)
	return nil
}

func (d *DeleteUserInviteResponse) String() string {
	if len(d.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(d.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(d); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", d)
}

type GetOrgInviteByCodeResponse struct {
	Invite *GetOrgInviteByCodeResponseInvite `json:"invite" url:"invite"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GetOrgInviteByCodeResponse) GetInvite() *GetOrgInviteByCodeResponseInvite {
	if g == nil {
		return nil
	}
	return g.Invite
}

func (g *GetOrgInviteByCodeResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GetOrgInviteByCodeResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetOrgInviteByCodeResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetOrgInviteByCodeResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetOrgInviteByCodeResponse) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GetOrgInviteByCodeResponseInvite struct {
	Id          string `json:"id" url:"id"`
	Email       string `json:"email" url:"email"`
	InviteToken string `json:"invite_token" url:"invite_token"`
	IsAccepted  bool   `json:"is_accepted" url:"is_accepted"`
	CreatedAt   string `json:"created_at" url:"created_at"`
	UpdatedAt   string `json:"updated_at" url:"updated_at"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GetOrgInviteByCodeResponseInvite) GetId() string {
	if g == nil {
		return ""
	}
	return g.Id
}

func (g *GetOrgInviteByCodeResponseInvite) GetEmail() string {
	if g == nil {
		return ""
	}
	return g.Email
}

func (g *GetOrgInviteByCodeResponseInvite) GetInviteToken() string {
	if g == nil {
		return ""
	}
	return g.InviteToken
}

func (g *GetOrgInviteByCodeResponseInvite) GetIsAccepted() bool {
	if g == nil {
		return false
	}
	return g.IsAccepted
}

func (g *GetOrgInviteByCodeResponseInvite) GetCreatedAt() string {
	if g == nil {
		return ""
	}
	return g.CreatedAt
}

func (g *GetOrgInviteByCodeResponseInvite) GetUpdatedAt() string {
	if g == nil {
		return ""
	}
	return g.UpdatedAt
}

func (g *GetOrgInviteByCodeResponseInvite) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GetOrgInviteByCodeResponseInvite) UnmarshalJSON(data []byte) error {
	type unmarshaler GetOrgInviteByCodeResponseInvite
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetOrgInviteByCodeResponseInvite(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetOrgInviteByCodeResponseInvite) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GetUserInviteByTokenResponse struct {
	Invite *GetUserInviteByTokenResponseInvite `json:"invite" url:"invite"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GetUserInviteByTokenResponse) GetInvite() *GetUserInviteByTokenResponseInvite {
	if g == nil {
		return nil
	}
	return g.Invite
}

func (g *GetUserInviteByTokenResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GetUserInviteByTokenResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetUserInviteByTokenResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetUserInviteByTokenResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetUserInviteByTokenResponse) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GetUserInviteByTokenResponseInvite struct {
	Id          string `json:"id" url:"id"`
	Email       string `json:"email" url:"email"`
	InviteToken string `json:"invite_token" url:"invite_token"`
	RoleId      string `json:"role_id" url:"role_id"`
	OrgId       string `json:"org_id" url:"org_id"`
	IsAccepted  bool   `json:"is_accepted" url:"is_accepted"`
	CreatedAt   string `json:"created_at" url:"created_at"`
	UpdatedAt   string `json:"updated_at" url:"updated_at"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GetUserInviteByTokenResponseInvite) GetId() string {
	if g == nil {
		return ""
	}
	return g.Id
}

func (g *GetUserInviteByTokenResponseInvite) GetEmail() string {
	if g == nil {
		return ""
	}
	return g.Email
}

func (g *GetUserInviteByTokenResponseInvite) GetInviteToken() string {
	if g == nil {
		return ""
	}
	return g.InviteToken
}

func (g *GetUserInviteByTokenResponseInvite) GetRoleId() string {
	if g == nil {
		return ""
	}
	return g.RoleId
}

func (g *GetUserInviteByTokenResponseInvite) GetOrgId() string {
	if g == nil {
		return ""
	}
	return g.OrgId
}

func (g *GetUserInviteByTokenResponseInvite) GetIsAccepted() bool {
	if g == nil {
		return false
	}
	return g.IsAccepted
}

func (g *GetUserInviteByTokenResponseInvite) GetCreatedAt() string {
	if g == nil {
		return ""
	}
	return g.CreatedAt
}

func (g *GetUserInviteByTokenResponseInvite) GetUpdatedAt() string {
	if g == nil {
		return ""
	}
	return g.UpdatedAt
}

func (g *GetUserInviteByTokenResponseInvite) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GetUserInviteByTokenResponseInvite) UnmarshalJSON(data []byte) error {
	type unmarshaler GetUserInviteByTokenResponseInvite
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetUserInviteByTokenResponseInvite(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetUserInviteByTokenResponseInvite) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type UpdateUserInviteResponse struct {
	Message string `json:"message" url:"message"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (u *UpdateUserInviteResponse) GetMessage() string {
	if u == nil {
		return ""
	}
	return u.Message
}

func (u *UpdateUserInviteResponse) GetExtraProperties() map[string]interface{} {
	return u.extraProperties
}

func (u *UpdateUserInviteResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler UpdateUserInviteResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UpdateUserInviteResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *u)
	if err != nil {
		return err
	}
	u.extraProperties = extraProperties
	u.rawJSON = json.RawMessage(data)
	return nil
}

func (u *UpdateUserInviteResponse) String() string {
	if len(u.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(u.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type AcceptOrgInviteRequestOrgData struct {
	Name    string `json:"name" url:"name"`
	Size    string `json:"size" url:"size"`
	Website string `json:"website" url:"website"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (a *AcceptOrgInviteRequestOrgData) GetName() string {
	if a == nil {
		return ""
	}
	return a.Name
}

func (a *AcceptOrgInviteRequestOrgData) GetSize() string {
	if a == nil {
		return ""
	}
	return a.Size
}

func (a *AcceptOrgInviteRequestOrgData) GetWebsite() string {
	if a == nil {
		return ""
	}
	return a.Website
}

func (a *AcceptOrgInviteRequestOrgData) GetExtraProperties() map[string]interface{} {
	return a.extraProperties
}

func (a *AcceptOrgInviteRequestOrgData) UnmarshalJSON(data []byte) error {
	type unmarshaler AcceptOrgInviteRequestOrgData
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*a = AcceptOrgInviteRequestOrgData(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *a)
	if err != nil {
		return err
	}
	a.extraProperties = extraProperties
	a.rawJSON = json.RawMessage(data)
	return nil
}

func (a *AcceptOrgInviteRequestOrgData) String() string {
	if len(a.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(a.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(a); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", a)
}

type AcceptOrgInviteRequestUserData struct {
	FullName string `json:"full_name" url:"full_name"`
	Password string `json:"password" url:"password"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (a *AcceptOrgInviteRequestUserData) GetFullName() string {
	if a == nil {
		return ""
	}
	return a.FullName
}

func (a *AcceptOrgInviteRequestUserData) GetPassword() string {
	if a == nil {
		return ""
	}
	return a.Password
}

func (a *AcceptOrgInviteRequestUserData) GetExtraProperties() map[string]interface{} {
	return a.extraProperties
}

func (a *AcceptOrgInviteRequestUserData) UnmarshalJSON(data []byte) error {
	type unmarshaler AcceptOrgInviteRequestUserData
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*a = AcceptOrgInviteRequestUserData(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *a)
	if err != nil {
		return err
	}
	a.extraProperties = extraProperties
	a.rawJSON = json.RawMessage(data)
	return nil
}

func (a *AcceptOrgInviteRequestUserData) String() string {
	if len(a.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(a.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(a); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", a)
}

type UpdateUserInviteRequest struct {
	RoleId string `json:"role_id" url:"-"`
}
